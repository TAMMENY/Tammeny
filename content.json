{"meta":{"title":"唐文雍的个人网站","subtitle":"WEB前端工程师","description":"记录我在学习Web前端过程中遇到的问题及解决方案.","author":"唐文雍","url":"http://www.tammeny.com"},"pages":[{"title":"tags","date":"2017-05-15T14:36:41.000Z","updated":"2017-05-15T14:37:35.000Z","comments":true,"path":"tags/index.html","permalink":"http://www.tammeny.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2017-05-15T14:40:39.000Z","updated":"2017-05-15T14:41:04.000Z","comments":true,"path":"categories/index.html","permalink":"http://www.tammeny.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-05-29T06:20:49.000Z","updated":"2017-05-29T00:05:24.000Z","comments":true,"path":"favicons/manifest.json","permalink":"http://www.tammeny.com/favicons/manifest.json","excerpt":"","text":"{\"name\":\"\",\"icons\":[{\"src\":\"/android-chrome-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/android-chrome-256x256.png\",\"sizes\":\"256x256\",\"type\":\"image/png\"}],\"theme_color\":\"#ffffff\",\"background_color\":\"#ffffff\",\"display\":\"standalone\"}"}],"posts":[{"title":"Web前端收藏夹","slug":"Web前端收藏夹","date":"2017-05-29T05:47:44.000Z","updated":"2017-05-31T14:08:34.000Z","comments":true,"path":"2017/05/29/Web前端收藏夹/","link":"","permalink":"http://www.tammeny.com/2017/05/29/Web前端收藏夹/","excerpt":"","text":"实用工具 RealFaviconGenerator：favicon生成器，兼容所有平台的所有浏览器，只需上传png图片，就可以导出适用于各个平台的icon，还可以生成相关代码，支持 HTML5、XHTML、Jade、Grunt、Gulp、Node CLI、RoR、ASP.NET Core、Google Web Starter Kit、RFG API。 ES6支持情况：各大浏览器的最新版本，对ES6的支持情况。 REPL在线编译器：Babel 提供一个REPL在线编译器，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。 JavaScriptAngularJSReactJS react-starter-kit：完美使用 React, Redux, and React-Router！最好用的脚手架 JQueryNodeJS文章精选教程 Markdown 入门参考 ECMAScript 6 入门：《ECMAScript 6 入门》是一本开源的 JavaScript 语言教程，全面介绍 ECMAScript 6 新引入的语法特性，作者是阮一峰。 JS进阶之test, exec, match, replace","categories":[],"tags":[],"keywords":[]},{"title":"NodeJS简单实现一条爬虫","slug":"NodeJS简单实现一条爬虫","date":"2017-05-28T15:56:28.000Z","updated":"2017-05-29T05:28:41.000Z","comments":true,"path":"2017/05/28/NodeJS简单实现一条爬虫/","link":"","permalink":"http://www.tammeny.com/2017/05/28/NodeJS简单实现一条爬虫/","excerpt":"","text":"业务需求抓取豆瓣网站下热门的电影。 依赖包介绍 request：让http请求变得超级简单，同时支持https和重定向，用于发送请求获取网页内容； cheerio：是一个很好的解析库，服务端版本的jquery，用于查找网页内容。 原理介绍网络爬虫的实现原理很简单，其实就相当于我们浏览网页，本文的demo是通过nodejs的request模块发送http请求，加载目标网页，再通过cheerio查找想要的内容。 创建项目123npm init Crawlernpm install request --savenpm install cheerio --save 在项目根目录新建index.js并插入以下代码：12345678910111213141516171819202122var request = require(&apos;request&apos;);var cheerio = require(&apos;cheerio&apos;);//获取热门电影function getHotMovie(url)&#123; request(url, function(err, response, body) &#123; if (!err &amp;&amp; response.statusCode == 200) &#123; $ = cheerio.load(body); var content = $(&quot;.ui-slide-content li.ui-slide-item&quot;); //获取电影列表DOM var length = content.length; var list = []; while (length --) &#123; var title = $(content[length]).data(&quot;title&quot;); //获取电影名称 title &amp;&amp; list.push(title); &#125; console.info(&quot;热门电影有：&quot;, list); &#125;else&#123; console.info(&quot;网页加载失败：&quot;, err); &#125; &#125;);&#125;getHotMovie(&quot;https://movie.douban.com/&quot;); 开始抓取运行node index.js开始抓取内容，最终获得以下结果： 问答 如何应对反爬虫策略？如伪造浏览器header，使用代理ip，限制规定时间内请求次数等。 如何读写excel？ node-xlsx: 基于Node.js解析excel文件数据及生成excel文件，仅支持xlsx格式文件； excel-parser: 基于Node.js解析excel文件数据，支持xls及xlsx格式文件； excel-export : 基于Node.js将数据生成导出excel文件，生成文件格式为xlsx； node-xlrd: 基于node.js从excel文件中提取数据，仅支持xls格式文件； js-xlsx: 是目前Github上star数量最多的处理Excel的库，功能强大，但上手难度稍大。 如何抓取分页数据？分析前几页链接的变化规律，通常url后面会有个数字递增，这就是页码了。","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://www.tammeny.com/tags/nodejs/"}],"keywords":[]},{"title":"我是如何实现H5唤起APP的","slug":"我是如何实现H5唤起APP的","date":"2017-05-14T08:59:47.000Z","updated":"2017-05-15T13:45:40.000Z","comments":true,"path":"2017/05/14/我是如何实现H5唤起APP的/","link":"","permalink":"http://www.tammeny.com/2017/05/14/我是如何实现H5唤起APP的/","excerpt":"","text":"业务需求在外部应用浏览H5页面，点页面的“打开APP”按钮，如有安装APP，就唤起，否则跳转到下载页面。 唤起的原理浏览器通过Url Scheme打开APP，像普通的url链接一样，通过a标签或者location.href打开即可唤起APP。 局限 APP未使用深度链接，微信、微博等其他社交软件无法直接唤起APP，只能通过浏览器唤起； JS无法准确判断本地是否安装了APP； 部分浏览器不支持唤起；… 微信中唤起微信上禁用了唤起APP接口，无法直接唤起APP，常规的做法是引导用户使用普通浏览器打开H5页面。但如果APP使用了深度链接，可以直接在各种APP之间跳转，包括微信、微博、普通浏览器。 浏览器唤起大多数普通浏览器可以通过以下方式直接唤起window.location.href = scheme或者&lt;a href=&quot;scheme&quot;&gt;打开APP&lt;/a&gt; 我的兼容方案JS无法判断某个APP是否有安装，网上很多方案是通过计算时间差，但很不稳定。我的兼容方案是：无论客户端有无安装APP，无论浏览器兼容与否，当用户点击“打开APP”时，通过window.location.href = scheme尝试唤起APP，同时3秒之后打开下载页面。 后续没有完美的方案，大家根据自己实际业务需求进行调整，灵活应用。下一篇文章我会贴出具体代码，并做成JS插件，敬请期待。","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2016-07-14T12:31:27.000Z","updated":"2016-07-14T12:31:27.000Z","comments":true,"path":"2016/07/14/hello-world/","link":"","permalink":"http://www.tammeny.com/2016/07/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}